* {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
    margin: 0;
    background-color: #171717;
}

.container {
    align-self: center;
    position: absolute;
    background-color: #373737;
    padding: 0.5rem;
    border-radius: 0.5rem;
    text-align: center;
    margin: 1rem;
    width: calc(100% - 3rem);
    height: calc(100% - 3rem);
}

h1 {
    --filter: invert(100%);
    color: white !important;
}

p.h {
    color: white !important;
    font-weight: normal;
}

p.gray_desc {
    color: rgb(184, 184, 184) !important;
    font-weight: normal;
}

p {
    --filter: invert(100%);
    font-size: large;
    font-weight: 900;
}

.nav {
    width: 100%;
    background-color: #474747;
    color: #FFFFFF;
}

.nav_element {
    margin-top: 0.5rem;
    margin-left: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    background-color: #575757;
    border: 0;
    color: white;
    padding: 1rem;
    transition: border-radius 1s;
}

.nav_element:hover {
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    transition: border-radius 1s;
}

.nav_element_selected {
    margin-top: 0.5rem;
    margin-left: 0.5rem;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    background-color: #373737;
    border: 0;
    color: white;
    padding: 1rem;
    transition: border-radius 1s;
}

.nav_element_selected:hover {
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    transition: border-radius 1s;
}

table {
    color: white;
    border-collapse: collapse;
    table-layout:fixed;
    word-break: break-word;
}

.table_overflow {
    overflow-y: auto;
    height: calc(100% - 23%);
}

th {
    background-color: #575757;
}

td, th {
    padding-top: 12px;
    padding-bottom: 12px;
}
table tr:nth-child(even){background-color: #474747;}
table tr:hover {
    background-color: #575757;
}

tr {
    text-align: center;
}

select, input, button.h {
    padding: 0.5rem;
    background-color: #474747;
    color: white;
    border: 0;
    border-radius: 0.5rem;
    transition: background 1s;
}

select:hover, input:hover, button.h:hover {
    background-color: #575757;
    transition: background 1s;
}

/* W3School stuff because idk how to do CSS */
/* I edited it though */

.bottom_popup {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    -webkit-animation-name: fadeIn; /* Fade in the background */
    -webkit-animation-duration: 0.4s;
    animation-name: fadeIn;
    animation-duration: 0.4s
}

.bottom_popup-content {
    position: fixed;
    bottom: 0;
    background-color: #272727;
    color: white;
    width: 100%;
    -webkit-animation-name: slideIn;
    -webkit-animation-duration: 0.4s;
    animation-name: slideIn;
    animation-duration: 0.4s
}

@-webkit-keyframes slideIn {
    from {bottom: -300px; opacity: 0} 
    to {bottom: 0; opacity: 1}
}
  
@keyframes slideIn {
    from {bottom: -300px; opacity: 0}
    to {bottom: 0; opacity: 1}
}
  
@-webkit-keyframes fadeIn {
    from {opacity: 0} 
    to {opacity: 1}
}
  
@keyframes fadeIn {
    from {opacity: 0} 
    to {opacity: 1}
}

/* https://cssloaders.github.io/ */
.loader {
    width: 100%;
    height: 4.8px;
    display: inline-block;
    position: relative;
    background: rgba(255, 255, 255, 0.15);
    overflow: hidden;
  }
  .loader::after {
    content: '';
    width: 192px;
    height: 4.8px;
    background: #FFF;
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    animation: animloader 2s linear infinite;
  }
  
  @keyframes animloader {
    0% {
      left: 0;
      transform: translateX(-100%);
    }
    100% {
      left: 100%;
      transform: translateX(0%);
    }
  }